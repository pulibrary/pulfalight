version: 2
jobs:
  build:
    working_directory: ~/pulfalight
    # Primary command image where all commands run
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          RAILS_ENV: test
    steps:
      - checkout
      - run:
          name: Install node@lts/erbium (need right version for `yarn`)
          command: |
            set +e
            touch $BASH_ENV
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.5/install.sh | bash
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
            echo 'nvm install lts/erbium' >> $BASH_ENV
            echo 'nvm alias default lts/erbium' >> $BASH_ENV
      - run:
          name: Check current version of node
          command: node -v
      - run:
          name: Set Timezone to EST/EDT
          command: echo 'America/New_York' = /etc/timezone
      # Restore bundle cache
      - restore_cache:
          keys:
            - pulfalight-{{ checksum "Gemfile.lock" }}
      - run: sudo apt update && sudo apt install postgresql-client
      - run:
          name: Update bundler
          command: |
            echo 'export BUNDLER_VERSION=2.1.4' >> $BASH_ENV
            gem install bundler -v 2.1.4
      - run:
          name: Install dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: pulfalight-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
      - run:
          name: Install NPM Dependencies via Yarn
          command: yarn install --frozen-lockfile
      # Store yarn / webpacker cache
      - save_cache:
          name: Save Yarn Package Cache
          key: pulfalight-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run: NODE_ENV=test bundle exec rails webpacker:compile
      - persist_to_workspace:
          root: '~/pulfalight'
          paths: '*'

  rubocop:
    working_directory: ~/pulfalight
    # Primary command image where all commands run
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          RAILS_ENV: test
    steps:
      - attach_workspace:
          at: '~/pulfalight'

      - run:
          name: Update bundler
          command: |
            echo 'export BUNDLER_VERSION=2.1.4' >> $BASH_ENV
            gem install bundler -v 2.1.4
      - run:
          name: Install dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: pulfalight-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle

      # Lint
      - run:
          name: Run rubocop
          command: bundle exec rake rubocop

  test:
    working_directory: ~/pulfalight
    # Primary command image where all commands run
    docker:
      - image: circleci/ruby:2.6.5-node-browsers
        environment:
          RAILS_ENV: test
          PULFALIGHT_DB_HOST: localhost
          PULFALIGHT_DB_USERNAME: pulfalight
          PULFALIGHT_DB_PASSWORD: ""
          SOLR_URL: http://localhost:8983/solr/pulfalight-core-test
      - image: postgres:10.6-alpine
        environment:
          POSTGRES_USER: pulfalight
          POSTGRES_DB: pulfalight_test
          # POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: trust
      - image: jrgriffiniii/pulfalight-solr:latest
        command: solr-precreate pulfalight-core-test /opt/solr/server/solr/configsets/pulfalight
    steps:
      - attach_workspace:
          at: '~/pulfalight'
      # project database settings
      - run:
          name: Wait for PostgreSQL
          command: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run:
          name: Update bundler
          command: |
            echo 'export BUNDLER_VERSION=2.1.4' >> $BASH_ENV
            gem install bundler -v 2.1.4
      - run:
          name: Install dependencies
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs 4 --retry 3
      - save_cache:
          key: pulfalight-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle

      - run: bundle exec rake db:create
      - run: bundle exec rake db:migrate
      - run: bundle exec rake db:migrate RAILS_ENV=test
      - run: bundle exec rake pulfalight:seed
      # Test
      - run:
          name: Run Rspec
          command: bundle exec rspec
      - run:
          name: Stash Coverage Results
          command: |
            mkdir coverage_results
            cp -R coverage/.resultset.json coverage_results/.resultset-${CIRCLE_NODE_INDEX}.json
      - persist_to_workspace:
          root: '~/pulfalight'
          paths: 'coverage_results'
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  coverage_report:
    working_directory: ~/pulfalight
    # Primary command image where all commands run
    docker:
      - image: circleci/ruby:2.6-node-browsers
        environment:
          RAILS_ENV: test
    steps:
      - attach_workspace:
          at: '~/pulfalight'

      - run:
          name: Update bundler
          command: |
            echo 'export BUNDLER_VERSION=2.1.4' >> $BASH_ENV
            gem install bundler -v 2.1.4

      # Analyze coverage report
      - run: gem install simplecov -v '~> 0.16.0'
      - run: gem install activesupport -v 5.1.6.2
      - run:
          name: Merge and check coverage
          command: |
            RAILS_ENV=test ruby ./scripts/combine_coverage.rb
      # Save artifacts
      - store_artifacts:
          path: ~/pulfalight/coverage
          destination: coverage

workflows:
  version: 2
  build_accept_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - rubocop:
          requires:
            - build
      - coverage_report:
          requires:
            - test
